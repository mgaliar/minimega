version: '3.7'
x-common: &common
  restart: always
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"
x-minimega-bin-volume:
  &minimega-bin-volume
  type: bind
  source: ./minimega-overlays
  target: /usr/local/share/minimega/overlays
services:
  phenix:
    build:
      context: ../
      args:
        PHENIX_VERSION: container
        PHENIX_WEB_AUTH: disabled
    command:
    - phenix
    - ui
    - --hostname-suffixes=-minimega,-phenix
    image: phenix
    container_name: phenix
    hostname: ${HOSTNAME}-phenix
    privileged: true
    <<: *common
    networks:
      phenix:
    ports:
      - 3000:3000
    volumes:
      - /dev:/dev
      - /proc:/proc
      - /sys:/sys
      - /phenix:/phenix
      - /etc/phenix:/etc/phenix
      - /tmp/minimega:/tmp/minimega
      - /var/log/phenix:/var/log/phenix
      - /etc/localtime:/etc/localtime:ro
      - *minimega-bin-volume
    depends_on:
      - minimega
    healthcheck:
      test: phenix version
  minimega:
    build:
      context: ../../
      dockerfile: phenix/docker/minimega/Dockerfile
      args:
        MM_FILEPATH: /phenix/images
        MM_PORT: "9000"
        MM_CONTEXT: ${HOSTNAME}
    image: minimega
    container_name: minimega
    hostname: ${HOSTNAME}-minimega
    privileged: true
    cap_add:
      - ALL
    tty: true
    <<: *common
    networks:
      phenix:
        aliases:
          - ${HOSTNAME}-minimega
    ports:
      - 9000:9000/udp
      - 9001:9001
    volumes:
      - /phenix:/phenix
      - /tmp/minimega:/tmp/minimega
      - /dev:/dev
      - /lib/modules:/lib/modules:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /root/.ssh:/root/.ssh:ro
      - /etc/localtime:/etc/localtime:ro
      - *minimega-bin-volume
    healthcheck:
      test: minimega -e version
networks:
  phenix:
